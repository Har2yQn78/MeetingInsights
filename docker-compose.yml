version: '3.8'

services:
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379" # Optional: Expose for external debugging if needed
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: gunicorn meetinginsight.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - media_volume:/app/media
      - staticfiles_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env # Load variables from .env file (DATABASE_URL MUST point to Neon here)
    environment:
      # Override Redis URLs to use service name
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=meetinginsight.settings
      - DEBUG=${DEBUG:-False}
      # DATABASE_URL is now read directly from .env via env_file
      # SECRET_KEY and OPENROUTER_API_KEY should be set in .env
    depends_on:
      redis:
        condition: service_healthy
    # Add entrypoint script later if migrations need to run automatically against Neon

  worker:
    build: .
    command: celery -A meetinginsight worker --loglevel=info
    volumes:
      - media_volume:/app/media # Mount media if worker needs access
    env_file:
      - .env # Load variables from .env file (DATABASE_URL MUST point to Neon here)
    environment:
      # Override Redis URLs to use service name
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=meetinginsight.settings
      # DATABASE_URL is now read directly from .env via env_file
      # SECRET_KEY and OPENROUTER_API_KEY should be set in .env
    depends_on:
      redis:
        condition: service_healthy
      # Optional: depends_on web can ensure code is fully loaded if needed
      # web:
      #   condition: service_started

volumes:
  # No postgres_data needed
  redis_data:
  media_volume:
  staticfiles_volume: